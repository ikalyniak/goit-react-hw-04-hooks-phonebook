{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","App.module.css","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","hooks/useLocalStorage.js","index.js"],"names":["module","exports","Form","props","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","addContact","id","uuidv4","className","styles","form","htmlFor","type","onChange","pattern","title","required","input","Contacts","contacts","map","contact","onClick","Filter","filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","dataContacts","setContacts","setFilter","filteredContacts","normalizedFilter","toLowerCase","includes","getContacts","app","newContact","find","elem","alert","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.444c4072.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"input\":\"Contacts_input__jXMGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport styles from './Form.module.css';\n\nexport default function Form(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.addContact({ id: uuidv4(), name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={styles.input}\n        />\n      </label>\n\n      <label htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contacts.module.css';\n\nexport default function Contacts(props) {\n  const onDelete = id => {\n    props.onClick(id);\n  };\n\n  const contacts = props.contacts;\n  return (\n    <ul className={styles.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <p>\n            {contact.name}:{contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contact by name\n      <input\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.filter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useLocalStorage from './hooks/useLocalStorage';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport dataContacts from './contacts.json';\nimport styles from './App.module.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', dataContacts);\n  const [filter, setFilter] = useState('');\n\n  const addNewContact = newContact => {\n    contacts.find(elem => elem.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts(state => [...state, newContact]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(item => item.id !== id));\n  };\n\n  const filteredContacts = getContacts();\n\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <Form addContact={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={filteredContacts} onClick={deleteContact} />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}